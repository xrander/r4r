# R Basics {#sec-basics}

Understanding the basic syntax of R is essential for performing complex operations. Basic operations in R include arithmetic (e.g., addition, subtraction), comparison operations which involve using conditionals to check how object compares against one another and iterations or looping to solve repetitive tasks.

## Arithmetic Operation
Operations such as addition, subtraction, multiplication and so on, are easy to execute in R. The arithmetic operators are given below:

|Operator|Definition|
|:----|----:|
|+|Addition|
|-|Subtraction|
|*|Multiplication|
|/|Division|
|^|Exponent or Power|
|**|Exponent or Power|
|%%|Remainder division|
|%/%|Integer division|

: Arithmetic operators in R {#tbl-arith-op .striped .hover}


Type the following commands in your console and hit enter:

```{r}
#| label: arithmetic-operation
2 + 1
3 - 1
4 * 2
15 / 5
3 ^ 2
3 ** 2
```
The above operations are straightforward. `%%` operator returns the remainder when two numbers are divided. While `%/%` returns the whole number or integer and discard the remainder.

```{r}
5 %% 3
5 %/% 2
```

R performs arithmetic easily and also follows the order of operations.

```{r}
3 + (5 - 2)

(5 * 4) / (7 - (2 + 4))
```


:::{.callout-tip apperance=simple}
Notice the spaces between numbers in arithmetic operations. While not required, spacing makes the code more readable. Don't be surprised that a lot of times you and people you work with / for will mostly be reading your codes.
:::

### Comparison Operation
Comparison operators are used to compare values and returns either TRUE or FALSE. TRUE and FALSE are called logical value. You will get more information on this when we get to data types.

Comparison operator in R include

| Symbol | Meaning |
| :--- | :--- |
| > |Greater than |
| < | Less than |
| == | Equal to |
| >= | Greater than or equal to |
| <= | Less than or equal to |
| != | Not equal to |

: Comparison Operators in R {#tbl-comp-operators .striped .hover}

Try these commands in R's console:
```{r}
4 > 5
(5^2) < (5 * 2)
10 >= 7
10 == 12
```

There are other operators which are useful in R. They are used to assign names to a variable or access elements of objects.

| Symbol | Meaning |
|:----|----:|
| <- | Assignment |
|= | Assignment |
|-> | Assignment (not common)|
| $ | Access elements |

: Other Operators in R {#tbl-ass .striped .hover}

For example, we can assign the number `17` to the variable `c`. `c` here is a container holding values.

```{r}
c <- 17
c
```

Above we assigned the value `17` to `c` using `<-`. This is the convention used for assigning objects to variables in R. We can change the value in `c` by assigning another value to it. This time let's assign the value 100 using the `=` operator
```{r}
c = 100
c
```

When we assign a different value to the same variable name in R, it gets replaced by the new value, thus a variable can only hold one value at a time. For `->` assignment variable, it comes after the value. For example:

```{r}
5000 -> d
d
```
While `->` is an assignment operator in R, it is rarely used. `<-` is the main operator used for assignment while `=` is common within functions. Following this simple guide ensure an organized code that is easy to follow.

The `$` will be discussed in future chapters and it will be used in this book.

## Summary
In this chapter, you some basic R syntax and the operators. The operators are used for mathematical operations, such as addition, multiplication, and division to mention a few. We also saw other operators such as `<` and `>` for comparing values. Lastly, we saw the assignment operator used to store values into containers called variable. Now that we've got the basics pinned down,  we will move on to learning the data types in R.